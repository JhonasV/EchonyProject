// <auto-generated />
using EchonyCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EchonyCore.Migrations
{
    [DbContext(typeof(EchonyEntityContext))]
    [Migration("20180325035725_comments2")]
    partial class comments2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EchonyCore.Models.Comentarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contenido_comentario");

                    b.Property<DateTime>("Fecha_Publicacion");

                    b.Property<string>("Foto");

                    b.Property<int>("PublicacionesId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PublicacionesId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("EchonyCore.Models.Foto", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("RutaFoto");

                    b.HasKey("Id");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("EchonyCore.Models.Publicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contenido");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Foto");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("EchonyCore.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Codigo");

                    b.Property<string>("ConfirmacionClave")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Estado");

                    b.Property<string>("Mensaje");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EchonyCore.Models.Comentarios", b =>
                {
                    b.HasOne("EchonyCore.Models.Publicaciones")
                        .WithMany("Comentarios")
                        .HasForeignKey("PublicacionesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EchonyCore.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EchonyCore.Models.Foto", b =>
                {
                    b.HasOne("EchonyCore.Models.Usuario", "Usuario")
                        .WithOne("Foto")
                        .HasForeignKey("EchonyCore.Models.Foto", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EchonyCore.Models.Publicaciones", b =>
                {
                    b.HasOne("EchonyCore.Models.Usuario", "Usuario")
                        .WithMany("Publicaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
